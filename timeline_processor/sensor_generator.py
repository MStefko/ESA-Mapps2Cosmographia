import os
from collections import OrderedDict
import simplejson as json

class SensorGenerator:
    def __init__(self, juice_config):
        self.juice_config = juice_config

    def _generate_sensor_json(self, instrument_name, sensor_name, target_name):
        # type: (str, str, str) -> OrderedDict
        """ Creates a sensor JSON with all necessary entries.

        :param instrument_name: Name of instrument (e.g. "MAJIS")
        :param sensor_name: Name of sensor (e.g. "JUICE_MAJIS_IR")
        :param target_name: Name of target body (e.g. "Callisto)
        :return: sensor JSON as OrderedDict
        """
        sensor_json = self.juice_config.get_template_sensor()
        edit_entry = sensor_json["items"][0]
        edit_entry["name"] = sensor_name
        edit_entry["geometry"]["instrName"] = sensor_name
        edit_entry["geometry"]["target"] = target_name
        edit_entry["geometry"]["frustumColor"] = \
            self.juice_config.get_sensor_colors()[instrument_name]
        return sensor_json

    def generate_sensors(self, observation_dict, target_name, output_folder_path):
        # type: (OrderedDict, str, str) -> None
        """ Generates and saves all necessary sensor JSON files for given observation.

        :param observation_dict: Dictionary generated by TimelineProcessor
        :param target_name: Name of target body (e.g. "Callisto)
        :param output_folder_path: Path to already created output folder.
        """
        # If you change the filenames, you need to change the TimelineProcessor as well
        sensor_folder_path = os.path.abspath(os.path.join(output_folder_path, "sensors"))
        os.makedirs(sensor_folder_path)
        for instrument_name, sensor_dict in observation_dict.iteritems():
            for sensor_name in sensor_dict:
                sensor_json = self._generate_sensor_json(instrument_name,
                                                         sensor_name, target_name)
                sensor_json_name = "sensor_{}_{}.json".format(sensor_name, target_name)
                with open(os.path.join(sensor_folder_path, sensor_json_name), 'w+') as outfile:
                    json.dump(sensor_json, outfile, indent=2)