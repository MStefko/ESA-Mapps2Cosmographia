import os

import simplejson as json
from collections import OrderedDict
import spiceypy as spy

from config import Config


class ScenarioProcessor:
    def __init__(self, juice_config: Config):
        self.juice_config = juice_config

    def process_scenario(self, metakernel_file_path: str, output_folder_path: str, ck_file_name: str, apply_solar_panels: bool) -> str:
        """ Loads already existing Cosmographia scenario file, inserts the new CK kernel,
        all necessary sensor and observation files, and saves the scenario to output
        folder.

        :param scenario_file_path: Original Cosmographia scenario file path.
        :param output_folder_name: Path to created output folder of this script.
        :param ck_file_name: Name of generated CK file.
        :return: Path to generated scenario JSON path.
        """
        KERNEL_JSON_NAME = "spice_kernels.json"

        kernel_json = OrderedDict()
        kernel_json["version"] = "1.0"
        kernel_json["name"] = "Base metakernel for autogenerated scenario."
        kernel_json["spiceKernels"] = [os.path.abspath(metakernel_file_path),
                                       ck_file_name]

        with open(os.path.join(output_folder_path, KERNEL_JSON_NAME), 'w+') as outfile:
            json.dump(kernel_json, outfile, indent=2)

        scenario_json = OrderedDict()
        scenario_json["version"] = "1.0"
        scenario_json["name"] = ""
        scenario_json["require"] = [KERNEL_JSON_NAME,
                                    "spacecraft/load_spacecraft.json"]

        if apply_solar_panels:
            self._apply_spacecraft_with_solar_panels(output_folder_path)
        else:
            self._apply_spacecraft_only(output_folder_path)


        new_scenario_name = "LOAD_SCENARIO.json"

        new_scenario_file_path = os.path.abspath(os.path.join(output_folder_path, new_scenario_name))
        # write the scenario JSON file
        with open(new_scenario_file_path, 'w+') as outfile:
            json.dump(scenario_json, outfile, indent=2)
        return new_scenario_file_path

    def _apply_spacecraft_only(self, output_folder_path):
        self.juice_config.create_spacecraft_folder_only(output_folder_path)

    def _apply_spacecraft_with_solar_panels(self, output_folder_path: str):
        self.juice_config.create_spacecraft_folder_with_solar_panels(output_folder_path)


